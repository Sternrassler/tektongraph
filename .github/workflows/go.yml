name: Go

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
            os_name: windows-amd64
          - goos: linux
            goarch: amd64
            os_name: linux-amd64
          - goos: linux
            goarch: arm64
            os_name: linux-arm64
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'  # Passen Sie die Go-Version nach Bedarf an

    - name: Extract repository name
      run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        echo "Building for GOOS=$GOOS GOARCH=$GOARCH"
        if [ "$GOOS" = "windows" ]; then
          OUTPUT_FILE="${REPO_NAME}_${{ matrix.os_name }}.exe"
        else
          OUTPUT_FILE="${REPO_NAME}_${{ matrix.os_name }}"
        fi
        echo "OUTPUT_FILE=$OUTPUT_FILE" >> $GITHUB_ENV
        GOOS=$GOOS GOARCH=$GOARCH go build -v -o "$OUTPUT_FILE" ./...

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.OUTPUT_FILE }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
